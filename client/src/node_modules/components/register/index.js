// Imports
import React, { Component } from 'react'
import { connect } from 'react-redux'
import { Link, Redirect } from 'react-router-dom'
import PropTypes from 'prop-types'
import { browserHistory, withRouter } from 'react-router'

import { postRegister } from 'actions'

class UserRegister extends Component {
    constructor (props) {
        super(props)

        this.state = {
            username: '',
            login: '',
            email: '',
            username: '',
            password: '',
            rePassword: '',
            error: '',
            isLoading: false,
            isLoggingIn: false,
            notification: false,
            registered: false
        }
    }

    onSubmit (event) {
        event.preventDefault()
        let input = {}
        input.username = this.state.username
        input.login = this.state.login
        input.email = this.state.email
        input.password = this.state.password
        input.rePassword = this.state.rePassword
        if (input.username !== '' && input.username.length > 3 && 
            input.login !== '' && input.login.length > 3 && 
            input.email !== '' && input.email.match(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/) !== null &&
            input.password !== '' && input.password.length > 6 ) {
            if (input.password == input.rePassword) {
                this.setState({isLoggingIn: true, isLoading: true})
                this.props.postRegister(input).then((response) => {
                    if (response.success) {
                    this.setState({
                        isLoading: false,
                        isLoggingIn: false,
                        notification: true,
                        username: '',
                        login: '',
                        email: '',
                        password: '',
                        rePassword: '',
                        error: ''
                    })
                    this.setState({registered: true})
                    } else {
                        this.setState({
                            isLoading: false,
                            isLoggingIn: false,
                            error: response.errors[0].message,
                            notification: false
                        })
                    }
                })
            } else {
                this.setState({
                    error: 'Вы ввели неверный повторный пароль',
                    notification: false
                })
            }
        } else {
        this.setState({
            error: 'Введите корректные данные',
            notification: false
        })
        }
    }

    onChange (event) {
        this.setState({
            [event.target.name]: event.target.value
        })
    }
    render () {
        return (
        <div className="register">
            <h2 className="register__name">Регистрация</h2>
            <br/>
            {this.state.error ? <p className="register-form__message">{this.state.error}</p>: ''}
            {this.state.message ? <p className="register-form__message">{this.state.message}</p>: ''}

            <form className="register-form" onSubmit={this.onSubmit.bind(this)}>  
                <div className="register-form__row">
                    <img className="register-form__icon" src="/icons/user.png" alt=""/> 
                    <div className="register-form__inputArea">
                        <input 
                        className="register-form__input" 
                        name="username"
                        value={this.state.username}
                        placeholder="ФИО"
                        onChange={this.onChange.bind(this)}
                        />
                    </div>
                </div>
                <div className="register-form__row">
                    <img className="register-form__icon" src="/icons/user.png" alt=""/> 
                    <div className="register-form__inputArea">
                        <input 
                        className="register-form__input" 
                        name="login"
                        value={this.state.login}
                        placeholder="Логин"
                        onChange={this.onChange.bind(this)}
                        />
                    </div>
                </div>
                <div className="register-form__row">
                    <img className="register-form__icon" src="/icons/email.png" alt=""/> 
                    <div className="register-form__inputArea">
                        <input 
                        className="register-form__input" 
                        name="email"
                        value={this.state.email}
                        placeholder="Электронная почта"
                        onChange={this.onChange.bind(this)}
                        />
                    </div>
                </div>
                <div className="register-form__row">
                    <img className="register-form__icon" src="/icons/password.png" alt=""/> 
                    <div className="register-form__inputArea">
                        <input 
                        className="register-form__input" 
                        type="password"
                        name="password"
                        value={this.state.password}
                        placeholder="Пароль"
                        onChange={this.onChange.bind(this)}
                        />
                    </div>
                </div>
                <div className="register-form__row">
                    <img className="register-form__icon" src="/icons/password.png" alt=""/> 
                    <div className="register-form__inputArea">
                        <input 
                        className="register-form__input" 
                        type="password"
                        name="rePassword"
                        value={this.state.rePassword}
                        placeholder="Повторите пароль"
                        onChange={this.onChange.bind(this)}
                        />
                    </div>
                </div>
                <input className="basket__btn" type="submit" value="Зарегистрироваться" />
            </form>
            {this.state.registered ?  browserHistory.push('/user/login') : ''}
        </div>
        )
    }
}

UserRegister.propTypes = {
    postRegister: PropTypes.func.isRequired
}

export default withRouter(connect(null, {postRegister})(UserRegister))