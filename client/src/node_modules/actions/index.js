import jwtDecode from 'jwt-decode'

import {
    FETCH_COMICS_START,
    FETCH_COMICS_SUCCESS,
    FETCH_COMICS_FAILURE,
    FETCH_COMICS_BY_ID_START,
    FETCH_COMICS_BY_ID_SUCCESS,
    FETCH_COMICS_BY_ID_FAILURE,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_FAILURE,
    ADD_COMICS_TO_BASKET,
    REMOVE_COMICS_FROM_BASKET,
    CLEAN_BASKET,
    USER_CURRENT_SET
} from 'actionTypes';

import {
    fetchComics as fetchComicsApi,
    fetchCategories as fetchCategoriesApi,
    fetchComicsById as fetchComicsByIdApi
} from 'api';


export const fetchComics = () => async dispatch => {
    dispatch({type: FETCH_COMICS_START});

    try {
        const comics = await fetchComicsApi();
        dispatch({
            type: FETCH_COMICS_SUCCESS,
            payload: comics
        })
    } catch (err) {
        dispatch({
            type: FETCH_COMICS_FAILURE,
            payload: err,
            error: true
        });
    }
}

export const fetchComicsById = id => async dispatch => {
    dispatch({type: FETCH_COMICS_BY_ID_START});
    try {
        const comics = await fetchComicsByIdApi(id);
        dispatch({
            type: FETCH_COMICS_BY_ID_SUCCESS,
            payload: comics
        })
    } catch (err) {
        dispatch({
            type: FETCH_COMICS_BY_ID_FAILURE,
            payload: err,
            error: true
        });
    }
}

export const addComicsToBasket = id => dispatch => {
    dispatch({
        type: ADD_COMICS_TO_BASKET,
        payload: id
    });
    
}

export const fetchCategories = () => async dispatch => {
    dispatch({type: FETCH_CATEGORIES_START});
    try {
        const categories = await fetchCategoriesApi();
        dispatch({
            type: FETCH_CATEGORIES_SUCCESS,
            payload: categories
        })
    } catch (err) {
        dispatch({
            type: FETCH_CATEGORIES_FAILURE,
            payload: err,
            error: true
        });
    }
}

export const removeComicsFromBasket = id => dispatch => {
    dispatch({
        type: REMOVE_COMICS_FROM_BASKET,
        payload: id
    });
    
}

export const cleanBasket = () => dispatch => {
    dispatch({
        type: CLEAN_BASKET,
    });
}
 export const basketCheckout = comics => () => {
     alert(JSON.stringify(comics))
 }


//User actions
 export function postLogin (credentials) {
    return dispatch => {
      return fetch(`http://localhost:3001/user/login`, {
        method: 'post',
        body: JSON.stringify(credentials),
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(response => {
          if (response.ok) {
            return response.json()
          }
        })
        .then(response => {
          if (response.success) {
            const token = response.data.token
            localStorage.setItem('token', token)
            dispatch(setCurrentUser(jwtDecode(token)))
          }
          return response
        })
    }
  }
  
  export function postRegister (credentials) {
    return dispatch => {
      return fetch(`http://localhost:3001/user/register`, {
        method: 'post',
        body: JSON.stringify(credentials),
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(response => response.json())
    }
  }
  
  export function setCurrentUser (user) {
    return {
      type: USER_CURRENT_SET,
      user
    }
  }
  
  export function userLogout () {
    return dispatch => {
      localStorage.removeItem('token')
  
      dispatch(setCurrentUser({}))
  
      return {success: true}
    }
  }